<?php


namespace DDDGen\Tests;


use DDDGen\Generator;
use DDDGen\VO\FQCN;
use DDDGen\VO\Primitive;
use PHPUnit\Framework\TestCase;

class GeneratorTest extends TestCase
{
    protected function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        
        // remove all tmp folders
        passthru("rm -rf " . __DIR__ . "/resources/tmp");
    }
    
    
    function test_it_accepts_config()
    {
        [$config, $primitives, $generator] = $this->seed_config();
        
        
        // Make API call
        $layer          = "app";
        $primitive_name = "command";
        $name           = "Some/ClassName";
        
        $generator->generate($layer, $primitive_name, FQCN::fromString($name));
        
        $this->assertFileExists($config['src_dir'] . "/" . $layer . "/Command/Some/ClassNameCommand.php");
        $this->assertFileExists($config['src_dir'] . "/" . $layer . "/Command/Some/ClassNameHandler.php");
        $this->assertFileExists($config['test_dir'] . "/" . $layer . "/Command/Some/ClassNameCommandTest.php");
        
        
    }
    
    
    private function seed_config()
    {
        $config = [
            "test_dir" => __DIR__ . "/resources/tmp/tests",
            "base_test_qcn" => "\\App\\Tests",
            "src_dir" => __DIR__ . "/resources/tmp/src",
            "base_qcn" => "\\App",
            "layers" => [
                "app" => [
                    "dir" => "app",
                ],
                "domain" => [
                    "dir" => "domain",
                ],
                "infrastructure" => [
                    "dir" => "infrastructure",
                ],
            ],
            "primitives" => [
                "command" => [
                    "alias" => "c",
                    "src" => [
                        "dir" => "Command",
                        "stubs" => [
                            __DIR__ . "/resources/stubs/SampleStub.stub.php",
                            __DIR__ . "/resources/stubs/Sample2Stub.stub.php",
                        ],
                    ],
                    "test" => [
                        "dir" => "Command",
                        "stubs" => [__DIR__ . "/resources/stubs/SampleTestStub.stub.php"],
                    ],
                
                ],
            ],
        ];
        
        // make folders
        @mkdir($config['test_dir'], 0777, true);
        @mkdir($config['src_dir'], 0777, true);
        
        // instantiate objects
        
        $primitives = $this->makePrimitives($config['primitives']);
        
        $generator = new Generator(
            $config['src_dir'],
            $config['test_dir'],
            new FQCN($config['base_qcn']),
            new FQCN($config['base_test_qcn']),
            $config['layers']['app']['dir'],
            $config['layers']['domain']['dir'],
            $config['layers']['infrastructure']['dir'],
            $primitives
        );
        
        return [$config, $primitives, $generator];
    }
    
    private function makePrimitives(array $config): array
    {
        $primitives = [];
        foreach($config as $name => $primitive_config) {
            $primitives[] = new Primitive(
                $name,
                $primitive_config['alias'],
                $primitive_config['src']['dir'],
                $primitive_config['src']['stubs'],
                $primitive_config['test']['dir'],
                $primitive_config['test']['stubs']
            );
        }
        
        return $primitives;
    }
    
}
